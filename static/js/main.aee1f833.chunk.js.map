{"version":3,"sources":["App.tsx","index.tsx"],"names":["PersonScoreForm","useForm","register","handleSubmit","errors","wait","ms","Promise","resolve","setTimeout","emailIsUnique","email","a","onSubmit","data","console","log","className","htmlFor","type","id","name","ref","required","validate","min","max","score","rootElement","document","getElementById","render"],"mappings":"iPAUaA,EAAkB,WAC7B,MAA2CC,cAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAQ1BC,EAAO,SAACC,GAAD,OAAgB,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAClEI,EAAa,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACdP,EAAK,KADS,gCAEH,0BAAVM,GAFa,2CAAH,sDAInB,OACE,wBAAME,SAAUV,GAZD,SAACW,GAChBC,QAAQC,IAAI,OAAQF,OAYlB,uBAAKG,UAAU,SACb,yBAAOC,QAAQ,QAAf,QACA,yBACEC,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,IAAKpB,EAAS,CAAEqB,UAAU,MAE3BnB,EAAOiB,MAA6B,aAArBjB,EAAOiB,KAAKF,MAC1B,uBAAKF,UAAU,SAAf,+BAGJ,uBAAKA,UAAU,SACb,yBAAOC,QAAQ,SAAf,SACA,yBACEC,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,IAAKpB,EAAS,CAAEqB,UAAU,EAAMC,SAAUd,MAE3CN,EAAOO,OAA+B,aAAtBP,EAAOO,MAAMQ,MAC5B,uBAAKF,UAAU,SAAf,uCAEDb,EAAOO,OAA+B,aAAtBP,EAAOO,MAAMQ,MAC5B,uBAAKF,UAAU,SAAf,sCAGJ,uBAAKA,UAAU,SACb,yBAAOC,QAAQ,SAAf,SACA,yBACEC,KAAK,SACLC,GAAG,QACHC,KAAK,QACLC,IAAKpB,EAAS,CAAEqB,UAAU,EAAME,IAAK,EAAGC,IAAK,IAAKF,SA1C3C,SAACG,GAAD,OAAmBA,EAAQ,IAAM,OA4CzCvB,EAAOuB,OAA+B,aAAtBvB,EAAOuB,MAAMR,MAC5B,uBAAKF,UAAU,SAAf,+BAEDb,EAAOuB,OAA+B,QAAtBvB,EAAOuB,MAAMR,MAC5B,uBAAKF,UAAU,SAAf,iCAEDb,EAAOuB,OAA+B,QAAtBvB,EAAOuB,MAAMR,MAC5B,uBAAKF,UAAU,SAAf,uCAEDb,EAAOuB,OAA+B,aAAtBvB,EAAOuB,MAAMR,MAC5B,uBAAKF,UAAU,SAAf,uCAGJ,0BAAQE,KAAK,UAAb,UCrEAS,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAAC,EAAD,MAAqBH,I","file":"static/js/main.aee1f833.chunk.js","sourcesContent":["import * as React from \"react\";\nimport \"./styles.css\";\nimport { useForm } from \"react-hook-form\";\n\ntype PersonScore = {\n  name: string;\n  email: string;\n  score: number;\n};\n\nexport const PersonScoreForm = () => {\n  const { register, handleSubmit, errors } = useForm<PersonScore>();\n\n  const onSubmit = (data: PersonScore) => {\n    console.log(\"data\", data);\n  };\n\n  const isEven = (score: number) => score % 2 === 0;\n\n  const wait = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n  const emailIsUnique = async (email: string) => {\n    await wait(1000);\n    return email !== \"someone@somewhere.com\";\n  };\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"field\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          ref={register({ required: true })}\n        />\n        {errors.name && errors.name.type === \"required\" && (\n          <div className=\"error\">Your must enter your name.</div>\n        )}\n      </div>\n      <div className=\"field\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          ref={register({ required: true, validate: emailIsUnique })}\n        />\n        {errors.email && errors.email.type === \"required\" && (\n          <div className=\"error\">Your must enter your email address.</div>\n        )}\n        {errors.email && errors.email.type === \"validate\" && (\n          <div className=\"error\">This email address already exists</div>\n        )}\n      </div>\n      <div className=\"field\">\n        <label htmlFor=\"score\">Score</label>\n        <input\n          type=\"number\"\n          id=\"score\"\n          name=\"score\"\n          ref={register({ required: true, min: 0, max: 100, validate: isEven })}\n        />\n        {errors.score && errors.score.type === \"required\" && (\n          <div className=\"error\">Your must enter your score.</div>\n        )}\n        {errors.score && errors.score.type === \"min\" && (\n          <div className=\"error\">Your score must be at least 0</div>\n        )}\n        {errors.score && errors.score.type === \"max\" && (\n          <div className=\"error\">Your score must be no more than 100</div>\n        )}\n        {errors.score && errors.score.type === \"validate\" && (\n          <div className=\"error\">Your score must be and even number</div>\n        )}\n      </div>\n      <button type=\"submit\">Save</button>\n    </form>\n  );\n};\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { PersonScoreForm } from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<PersonScoreForm />, rootElement);\n"],"sourceRoot":""}